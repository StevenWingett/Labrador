Labrador Sequence Management System
====================================


1 Introduction
===============

Labrador is a web based tool to manage projects and automate the processing of publicly available datasets.

Researchers can use it to search through previously processed data, find how it was analysed, read processing reports and download the relevant files to their computers. If a required dataset isn't yet available, they can request it by creating a new project - the information about the required data sets is then passed on to adminsitrators (typically a bioinformatics team), who can process it. The status of projects is tracked, and everything is kept together in a logical place.

Administrators can delegate the process of choosing the required datasets to researchers. Labrador automatically retrieves public data accession numbers and can write bash scripts to download and process data. This helps to standardise in-house processing and streamline pipelines. Researchers interested in a project are notified when new datasets are added or processing is complete.


2 Installation
===============

2.1 Pre-requisites
-------------------

2.1.1 Hardware
---------------

The hardware requirements for Labrador are very minimal.  No intensive processing is done within the system so a basic server class, or even desktop machine should easily be able to run the system.  In order to store the data you will need to have a large robust storage system, but this need not be present on the local machine as long as it can be made visible to the machine running Labrador (eg via NFS, Samba etc).  Since Labrador can read and transmit very large data files it would be very beneficial to have a fast (preferably gigabit) network connection to the machine running Labrador.

2.1.2 Software
---------------

Labrador itself is written in PHP and uses a MySQL database to store the data.  The user interface is provided through a web server, and default configuration files are provided for the apache web server, although other servers should work equally well.

Users do not need any software to use Labrador other than a web browser and an installation of Java for the bulk file download tool.


2.2 Installation
-----------------

Installation of Labrador is as simple as downloading the installation bundle from the project web site and then extracting it into the location you wish to install the program.  On a unix system you would do this using:

tar -xzvf Labrador.tar.gz

On a windows system you would use a decompression utility such as 7zip or WinZip to unpack the files from the installation bundle


2.3 Configuration
------------------

There are a number of different configuration steps you need to take before launching system for the first time.


2.3.1 Database Creation
------------------------

Before starting the system you need to create the database which is going to be used by Labrador.  The Labrador installation contains an SQL file which will set up and configure a database with default values. The file is in the SQL folder of the installa8tion and if you are using a MySQL install on the same machine as your webserver and you're happy to use the default database username (labradoruser), then you can install the default database using:

mysql -u root -p < labrador_database.sql

You will be prompted for the MySQL root password and the database will be created.  You can subsitute the root account for any other MySQL account with sufficient privileges to create a new database and add user permissions to it. Warning - running this file with an existing Labrador database will overwrite all previous data.

If you want to put the database on a different machine to the webserver, or you want to change the username used to connect to the database then you will need to edit the SQL file and change the GRANT statements at the bottom to use the username and machine you would prefer to use.

For example you could change the statement:

GRANT INSERT,SELECT on labrador.* TO labradoruser@localhost;

to

GRANT INSERT,SELECT on labrador.* TO mylocaluser@somemachine.example.com;


2.3.2 Webserver configuration
------------------------------

Our recommended configuration is to install Labrador in a directory outside your document root and then adjust your webserver configuration to allow it to find the installation and map it to a URL.  We have included a default apache configuration file under conf/labrador_apache.conf which you can either copy into your apache configuration directory (normally something like /etc/httpd/conf.d/) or which you can copy into your main httpd.conf file.

The example configuration will allow you to access Labrador at a URL of /labrador/ under your top level domain (eg http://www.example.com/labrador/).  You will need to edit the configuration file to change the file paths shown to reflect the directory in which you have installed Labrador.

Once you have added the configuration file you will need to restart your web server for the changes to take effect.


2.3.3 Data Folders
-------------------

If you want Labrador to be able to locate and serve data you need to make these available on the system on which Labrador is installed.  Labrador uses a directory for each project, named after that project identifier.

eg You would have a run data folder with a structure like:

..Somewhere
          \
          Labrador
                  \
                  \ Project_One_2011
                  \ Project_Two_2013



2.3.4 Labrador Configuration File
----------------------------------

In order to connect to your database and find your data Labrador needs to know some information about your setup.  All of the pieces of information the system needs are configured in a file called config.php which is in the conf directory of your Labrador installation.  A template configuration file called config.php.example is provided, and you should copy this to a file called config.php in the same directory and then edit this to include the correct information for your site. Hopefully all the pieces of information in there are self-explanatory, and you need to ensure that they reflect your local environment

Once you have all of these elements in place you should be able to go to http://yourserver/labrador/ and start using the system.



3 Normal Usage
===============

Once set up, Labrador can be viewed and used by anyone without any authentication for basic use. Below, the basic functionality is described for a user who is not logged in. Then the additional features granted to authenticated users (normal and then administrators) is described after that.

3.1 Searching projects
-------------------------
Often you want to find a specific project within Labrador that you know about. There is a search bar at the top of every page - entering a search term and submitting the form will take you to a results page with tabs for projects, publications and datasets.

As you start typing into the search bar, Labrador tries to match project identifiers. Any matching identifiers will be shown as a drop down list - these can be selected with the keyboard or the mouse, clicking or pressing enter will take you directly to that project.


3.2 Browsing projects
------------------------
The homepage of Labrador is designed for browsing projects. The main panel lists all projects known to Labrador, colour coded by their status. Clicking the different statuses in the key will filter the table by status. The left panel contains a number of filters, enabling you to quickly filter by a text string, project name (first letter), species and data type. Clicking anywhere on a project will go to that project.


3.3 Viewing projects
---------------------
Once you've selected a project, you'll be taken to its page. Project pages always have a side navigation allowing you to view different aspects of the project.

All project pages share a header. This shows the project identifier and any project accession numbers. Under this the project status is shown, the names of people linked to the project, the bioinformatician assigned to process the data and the location of the project directory on the server. 


3.3.1 Project Details
----------------------
The Project Details page outlines the overarching meta data related to the project. Any publications relating to the project are shown, along with a project title and description. A full list of contacts is shown as well as a history of logged events showing any activity related to the project.


3.3.2 Datasets
---------------
The Datasets page shows all datasets associated with a project. A dataset describes data from a single experiment. Name, species, cell type, data type and accession codes are shown. You can click column headers to sort the table by that column and use the text box at the top to filter by text string. Clicking an accession number will open the relevant database page in a new window.


3.3.3 Processing
-----------------
The processing page shows logs of the processing commands that have been run on each dataset, if they were generated using Labrador. This gives a way to see how data was processed, even if it was done some time ago.


3.3.4 Reports
--------------
Labrador can be configured to show processing reports within the browser, making it quick and easy to get an overview of the quality of a dataset and how well the processsing has worked. Recognised report files will be shown in dropdown boxes in the top right. Selecting an option will refresh the page.


3.3.5 Files
------------
The Files page shows all files found within the project folder on the server. You can sort the table by it's headers - name, file size, genome and filename. You can filter the fiels by dataset, by free text string and by type (aligned, raw etc. Uses common file extensions).

Clicking a filename will download that file to your computer. If you want to download multiple files you can select their rows and click the download button at the bottom of the page. This launches the downloads in a Java applet which maintains the directory structure and runs the downloads in series.


4 Use by registered users
==========================
To do some functions in Labrador you have to be logged in. This is so that any bioinformaticians processing the data for you know who to contact about any questions.

4.1 Creating an account
--------------------------
You can register to use Labrador by from the login page by clicking "Log In / Register" at the top of any page. This will show a modal window with two tabs - click 'Register' and fill in the associated form.  Upon submission the system will send out an email containing a link which will activate the account and allow you to log in. If your group is not present in the drop down list, an administrator can add it in the Labrador config file.

4.2 Logging in
---------------
Once registered you can log in by clicking the same "Log In / Register" link in the top right of any page. You will be returned to the same page upon logging in, but please note that you'll lose any data that you've entered into the page and not saved. If you've forgotten your password you can reset it by clicking the "click here" link on the log in form.

4.3 Requesting a new project
-----------------------------
If you've searched Labrador for a particular dataset and not been able to find it, you can request it be processed by your bioinformatics team by clicking "Create New Project" at the top of any page.

Most repositories of publicly available next-generation sequencing (GEO, SRA, ENA, DDJB) have a similar structure - a single publication usually has a single project accession. Contained within this are multiple datasets, which correspond to different experiments. Labrador mirrors this structure.

The best place to start when requesting a new project is from such a public repository. Entering a project accession and clicking the magnifying glass will look the accession up from the relevant repository and automatically fill in as much of the form as possible. For GEO and SRA accessions, this typically means the title, description, publication and project identifier.

You can enter as many accession numbers as you like. In fact, the more you add, the better. Having all relevant accession numbers is important when adding datasets (see below).

The only item that is mandatory is the project identifier. This needs to be unique within Labrador and will correspond to a directory name on the server. Entering an identifier that already exists will produce an error.


4.3.1 Adding new datasets
--------------------------
Once you have created a new project, you need to add the datasets that you are interested in. Clicking "Add datasets" after creating the project will take you to this page.

Labrador can make your life easier by retrieving all of the datasets associated with a project accession entered under Project Details. These appear as buttons at the top of the page. Clicking a button will query that repository for all datasets associated and enter them into the table below. You may need to try searching several different accessions before finding all of the datasets that you need.



4.3.2 Requesting new datasets for an old project
-------------------------------------------------




5 Use by Administrators
========================
Administrators can do everything a normal user can do, so only information on additional options will be shown in this section.


5.1 Creating a new account
----------------------------


